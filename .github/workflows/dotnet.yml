name: .NET Build and Test

on:
  push:
    branches:
      - '*'  # Trigger on all branches
  pull_request:
    branches:
      - '*'  # Trigger on all branches

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mssql-server

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up the .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.400

      # Install SQLCMD for database interactions
      - name: Install SQLCMD
        run: |
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      # Wait for MS SQL Server to start
      - name: Wait for MS SQL Server
        run: sleep 15

      # Restore project dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Add EF Core migration
      - name: Add EF Core migration
        run: |
          dotnet ef migrations add ExpenseAuthMigration --context ExpenseAuthDbContext
          dotnet ef database update --context ExpenseAuthDbContext

          dotnet ef migrations add UserDocsMigration --context UserDocumentsDbContext
          dotnet ef database update --context UserDocumentsDbContext

      # Build the project
      - name: Build project
        run: dotnet build --no-restore

      # Uncomment to run tests
      # - name: Run tests
      #   run: dotnet test --no-build --verbosity normal
